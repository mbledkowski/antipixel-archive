%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 13.0.1%%For: (Alex Roberts) ()%%Title: (by-nc-sa.eu.eps)%%CreationDate: 3/27/08 4:27 PM%%BoundingBox: 340 278 461 321%%HiResBoundingBox: 340.5 278.5 460.5 320.5%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.74902 0.678431 0.670588 0.901961 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_Cropmarks: 340.5 278.5 460.5 320.5%AI3_TemplateBox: 400.5 299.5 400.5 299.5%AI3_TileBox: 112 -56 688 678%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 800 600%AI5_RulerUnits: 6%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -381 756 1 1566 923 26 0 0 73 75 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 48 8 48 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 48 8%%BeginData: 9404 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45A8FD7DF827A8F8275258527D5258527D5258527D5258527D525852%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52%58527D5258527D5258527D5258527DF8F8F852A87D837DA87D837DA87D83%7DA87D837DA87D847DA87D847DA87D837DA87D837DA87D837DA87D837DA8%7D837DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D83%7DA87D837DA87DA87DA883A87DA87D837DA87D837DA87D837DA87D837DA8%7D837DA87DA87DA883A87DA87D837DA87D837DA87D837D7DF8F8FD127D83%FD207DFD0552585883FD147D52522D5252597D83FD147D52522D52527D7D%83FD0A7D52F8F852A87D837D837D837D837D837DA87D835858FD05272D2D%7D7DA87D847D837D837D837D837D837D837D837D837DA87D522727FD05F8%27277D7DA87D837D837D837D837D837D837DA8595227FD06F827277D7DA8%7D837D837D837D837D837D837DA85252FD07F827527D7DA87D837D837D83%7D7DF8F8FD0C7D837D5227FD0AF827277D7D83FD0F7D8352FD0CF8275883%FD0B7D8327FD0CF82D7D83FD0C7D27FD0CF8527D83FD067D52F8F858837D%837D7D7D837D7D7DA85227FD0FF8277DA87D7D7D837D7D7D837D7D7D837D%8327F8F8F8277D7DA8A8A87D52F8F8F82752A87D7D7D837D7D7D837D7D27%F8F8F8277DFD04A87D27F8F8F8277DA87D7D7D837D7D7D837D7DFD04F827%7DFD04A85227F8F8F8277DA87D7D7D837D7DF8F8FD0B7D27FD06F8272752%52522727FD06F85283FD0C7D27F8F8F87DFD08FFA827F8F8F85283FD087D%04F8F8277DFD08FFA8F8F8F8275883FD087DF8F8F8277DFD08FF7DF8F8F8%27FD067D52F8F858A87D837D837D837D8327FD04F8277DA8FD07FFA85227%FD04F852A87D837D837D837D837DA82DF8F827A8FD04FF5227A8FD04FF52%F8F8277DA87D837D837DA827F8F852FD0CFF52F8F8277D837D837D837D84%27F8F852FD0CFF27F8F8527D837D837D7DF8F8FD087D8327FD04F87DFD0C%FFA852FD04F85283FD087D52F8F827A8FD04FF7DF8F8F8FD05FF52F8F827%FD057D832DF8F827FD06FF7D52527DA8FFFFFF52F8F852FD057D8327F8F8%52FD06FF7DA8A8FD05FF27F8F8527D7D7D8352F8F852A87D7D7D837DA827%FD04F8A8FD0FFF7DFD04F852A87D837D7D7D837D27F8F8A8FD05FF52F8F8%F8FD06FF27F8F8FD047D847D27F827FD05FF7DFD06F8A8FFFFFF27F8F8FD%047DA858F8F827FD04FFA827F8F8F82727FD05FFF8F8F8FD057DF8F859FD%057D8352FD04F8A8FD11FF7DFD04F858FD067D52F8F852FD07FF27277DFD%07FFF8F8F8837D7D7D52F8F8F8527DFFFF52FD07F8FD04FFA8F8F827837D%7D7D27F8F8A8FFFFFF7DFD08F8A8FFFFFF7DF8F827837D7D52F8F852A87D%837DA87D27F8F8F8A8FD13FF7DF8F8F82D7D847D837DA827F8F8FD06FFA8%FD057DFD06FF7DF8277D837DA827FD05F8277DF8F8F8527DA8527DFD05FF%52F8277D837D7DF8F852FFFFFFA827F8F8F8525227F8F8F8FD04FF27F827%7D837D7DF8F8FD067D52F8F8F87DFD15FF52F8F8F859FD057D27F852FD05%FFA8FD06F852FD05FFA8F8F8527D7D52F8F85227FD06F827FD0AFF7DF8F8%7D7D7D52F8F8A8FFFFFF7DF8F8F8A8FFFFA827F8F852FFFFFF52F8F87D7D%7D52F8F858837D837D7DF8F8F852FD17FF27F8F827A87D837D7DF8F87DFD%05FF7DFD06F852FD06FFF8F827A87D52F8F8A8FF7D27FD05F87D7DA87DFD%07FFF8F852A87D52F827FD04FF27F8F827FD04FF7DF8F827FFFFFFA8F8F8%52A87D7DF8F8FD047D8327F8F8F8A8FD17FF52F8F8F8587D7D8352F8F8A8%FD05FF7DFD06F827FD06FF27F8277D832DF8F8FFFFFF27FD09F87DFD05FF%A827F8527D8327F8F8FFFFFF7DF8F8F827FD04FFA8F8F8F8A8FFFFA8F8F8%527D7D52F8F858A87DA87D27F8F852FD05FF7D52275252FD05FF7D522752%7DFD05FFF8F8F8527D837D58F8F8A8FD05FF7DFD06F852FD06FF27F827A8%7D52F827FD04FF52FD08F852A8FD05FF27F827A87D2EF852FD04FFA8F827%FD05FFA8F8F8F87DFFFFFFF8F852A87D7DF8F8FD057DF8F8F87DFD04FF52%FD06F8A8FFFFFD06F827FD04FF27F8F827837D8352F8F8A8FD05FF7DFD06%F827FD06FF27F8277DA82DF8F8FFFFFF52FD0BF827A8FFFFFF27F8527DA8%27F827FD05FFA8FD06FFA8F8F8F8A8FFFFA8F8F8527D8352F8F852A87D83%52F8F8F8A8FFFFFF52F8F8F82727F8F8F8FF27F8F8272727F8F852FFFFFF%7DF8F827FD047DF8F87DFD05FFA827FD05F87DFD06FFF8F827A87D52F8F8%A8FFFF52FD05F8272727FD05F8277DFFF8F852A87D52F827FD04FF7DA87D%A8FD04FF7DF8F8F8A8FFFFA8F8F852837D7DF8F8597D7D7D52F8F8F8FFFF%FFA8F8F8F852FFFF52F8A87DF8F8F8A8FFA82727A8FFFFFFA8F8F8F87D7D%7D58F8F852FD07FF27F8F8F8A8FD06FFA8F8F8527D7D52F8F87DFFFFFFA8%F8F8F87DFFFFA8FF7D27FD07F8527D7D2EF8F8A8FFFFFF27F8F827FD04FF%52F8F827FFFFFF52F8F87D7D7D52F8F852A87DA852F8F852FFFFFFA8F8F8%F8FD06FF7DF8F852FFFFFFA8FD05FFA8F8F8277D837DA827F827FD07FF27%F8F8F8A8FD06FF7DF8F858A87D83F8F827FD04FF27F8F8F8A8FD05FFA827%FD04F8277D837D7DF8F852FFFFFF7DF8F8F87DFFA87DF8F8F87DFFFFFF52%F8277D837D7DF8F8FD047D52F8F827FFFFFF7DF8F827FD06FF27F8F87DFD%09FFA8F8F8F8FD047D52F8F87DFD06FF27F8F8F8A8FD06FF27F8F8FD047D%52F8F8A8FFFFFF7DFD04F8525227F8FFFFFF7D52F8F827837D7D7D27F827%A8FFFFFF27FD08F852FFFFFFA8F8F827A87D7D52F8F858837DA852F8F852%FFFFFFA8F8F8F8FD06FF52F8F852FD09FFA8F8F8F87D837D837D27F827FD%06FF27F8F8F8A8FD05FF7DF8F8527D837D8352F8F852FD04FF7DFD07F87D%FFFFFF52F8F87D7D837DA852F8F852FD04FF27FD06F852FD04FF27F8F87D%7D837D7DF8F8FD047D52F8F827FFFFFFA8F8F8F87DFFFFA852FF52F8F827%FFFFFF7D52FD04FFA8F8F8F8FD057D27F8F852FD05FF27F8F8F8A8FD04FF%7DF8F827FD067D27F8F852FD04FF7D52FD04F827A8FFFF7DF8F827FD067D%F8F8F87DFD04FF5252F82727A8FD04FF52F8F852FD047D52F8F858A87DA8%52F8F827FD04FF27F8F8277DA827F827A8F8F8F852A87DF8F852FFFFFF7D%F8F8277DA87D837DA827F8F852FD04FF27F8F827A8FFFFFF7DF8F8F852A8%7D837D837D83F8F8F87DFD06FFA8A8A8FFFFFF7DF8F8277DA87D837D837D%7DF8F8F8A8FD0CFF52F8F8277D837D837D7DF8F8FD057DF8F8F8A8FFFFFF%A8FD07F852FF7DFD07F8A8FFFFFF52F8F827FD077DF8F8F827A8FFFFFFA8%FFA8FFFFFF52F8F8F82DA8FD087DF8F8F852A8FD09FF52F8F8F852A8FD07%7D58F8F8F852FD09FFA827F8F8F852837D7D7D8352F8F852A87D837D27F8%F852FD04FFA827FD04F87DFFFFFF7DFD04F827A8FD04FF27F8F8527D7D7D%83FD047D27F8F8F852A8A8FFFFFFA87D27F8F8F852A87D837D7D7D83FD04%7DF8F8F82752A8A8FFFFFFA87DFD04F852A87D837D7D7D837D7D7D59F8F8%F82752A8FD04FF7D52F8F8F8277DA87D83FD047DF8F859FD047D27F8F827%A8FD05FFA8A87DFFFFFFA8FFFFFF7DA8A8FD05FF7DF8F8F85283FD087D27%FD06F827FD06F85283FD0C7D27FD04F827F827FD05F8275283FD0C7DFD05%F827F827FD05F8275883FD067D52F8F852A87D837D7DF8F8F87DFD17FF52%F8F8F8A87D837D837D837D837DA85227FD09F8527DA87D837D837D837D83%7D837D837D835227FD08F805527DA87D837D837D837D837D837D837D7D2E%27FD07F82127587DA87D837D837D837D7DF8F8FD067D27F8F8F8FD16FF7D%F8F8F852FD0E7D52FD04275252FD127D837D7DFD05275252FD127D837D7D%FD0527525283FD0A7D52F8F858837D837D8452F8F8F827FD15FFF8F8F827%7D837D837D7D7D837D7D7D837D7D7DA87D847DA87D837D837D7D7D837D7D%7D837D7D7D837D7D7D837D837DA87D847DA87D837D837D7D7D837D7D7D83%7D7D7D837D7D7D837D837DA87D847DA87D837D837D7D7D837D7D7D837D7D%F8F8FD047D837D7D27F8F8F852FD13FFFD04F852837D7D7D837D7D7D837D%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D%837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D%7D7D837D7D7D837D7D7D837D7D7D837D7D7DA852F8F8527D527D52837D83%FD04F852FD11FF27F8F8F827A87D7D527D5258527D5258527D5258527D52%58527D5258527D5258527D5258527D5258527D5258527D5258527D525852%7D5258527D5258527D5258527D5258527D5258527D5258527D5258527D52%58527D5258527D5258527D5252FD07F852837D7DFD04F827FD0EFFA8FD04%F8277D7D8427FD5FF8277D837D7DFD05F87DA8FD09FFA852FD04F8277D7D%A852FD61F82DFD047DFD06F8277D7DA8A8A87D7D27FD05F8277D7D8358FD%63F8527DA87D7D27FD08F827FD07F82752A87DA87D27FD0BF8527DA87D7D%F8527D52F8F852A8FD0EF827A852F8F87D52F8F852A8A87D27FD0FF852A8%FF7D27F8F8F87D7D27FD16F852FD047D5227FD0DF82752A87D7D7D27FD0C%F8A8FFA8A8FFA8F8FFA8F8F8FFA8FD0EF852FFFFF8F8A8FFF852FFFF7DFF%A8FD0EF827FFA87DFFA8F8F852FFFF27FD17F8527DA87DA87D7D2727FD07%F8272D7D7D837DA87D27FD0DF8A8A8F8F8A8FFF852FF52A8FF27FD0EF827%FFFFA8F8A8A8F8A8FFF8F852FF27FD0DF852FF52F827A8F8F87DFFFF7DFD%18F82758837D7D7D837D7D52525258527D7D83FD047D52FD0FF87DFF7DA8%FF52F8F87DFFFF7DFD0FF827FFA8FF277DA827FF52FD12F827A8FFA852F8%F8F8FF527DA8FD19F82752837DA87D837DA87DA87DA87D837DA87D7D27FD%10F8A8FF7D7DFFA8F8F852FFFFFD10F827FF52FD04A852FF7DF8F8F827FD%0FF8277DFFFFFFF852FF5252FF27FD1BF85252837D7D7D837D7D7D837D7D%5227FD12F87DFFF8F852FF27F8F8FF7DFD10F827FF52F8FFFFA8F8FF7DF8%F852FF52FD0DF8527DF8F852FF527DFFA8FFFF7DFD1DF82752527D527D58%7D5252FD15F8A8FF7D7DFFFF27F827FFA8FD10F827FF52F87DFFA8F852FF%7D7DFFFFFD0EF852FF7D52A8FF52FF7D2727A8FF27FD3BF852A8A8FFA852%F8F8F8A852FD10F827A852F827A87DF8F852FFFFA827FD0FF852FFA8FF27%52A827F8F827FF27FD59F827FD07F827FD13F827FD95F852FD7F27FD7FFF%FF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.74902 0.678431 0.670588 0.901961 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(svg2759) Ln0 AuUuu0 O0.34902 0.231373 0.305882 0 0.666667 0.698039 0.670588 Xa0 J 0 j 1 w 4 M []0 d0 XR343.9082 320.0474 m457.2617 319.8457 L458.8457 319.8457 460.2617 320.0811 460.2617 316.6855 C460.123 279.3564 L341.0474 279.3564 L341.0474 316.8242 L341.0474 318.4985 341.2095 320.0474 343.9082 320.0474 Cf*u1 D0.74902 0.678431 0.670588 0.901961 0 0 0 Xa458.2539 320.5 m342.7476 320.5 L341.5083 320.5 340.5 319.4917 340.5 318.2529 C340.5 279.0068 L340.5 278.7266 340.7271 278.5 341.0073 278.5 C459.9922 278.5 L460.2734 278.5 460.5 278.7266 460.5 279.0068 C460.5 318.2529 L460.5 319.4917 459.4922 320.5 458.2539 320.5 Cf0 D342.7476 319.4849 m458.2539 319.4849 L458.9326 319.4849 459.4844 318.9326 459.4844 318.2529 C459.4844 302.4565 459.4844 291.0322 V376.9282 291.0322 L373.9023 285.5615 368.0718 281.8467 361.3809 281.8467 c354.6885 281.8467 348.8599 285.5586 345.8359 291.0322 C341.5151 291.0322 L341.5151 302.4565 341.5151 318.2529 Y341.5151 318.9326 342.0684 319.4849 342.7476 319.4849 Cf*Uu0 0 0 0 1 1 1 Xa375.022 300.9487 m375.0269 293.4189 368.9258 287.3125 361.3955 287.3066 C353.8657 287.3027 347.7573 293.4033 347.7524 300.9321 C347.7524 300.938 347.7524 300.9429 347.7524 300.9487 C347.7476 308.4785 353.8491 314.5854 361.3789 314.5903 C368.9102 314.5947 375.0181 308.4946 375.022 300.9653 C375.022 300.96 375.022 300.9541 375.022 300.9487 Cfu*u0.74902 0.678431 0.670588 0.901961 0 0 0 Xa372.4717 312.0532 m375.4946 309.0303 377.0068 305.3281 377.0068 300.9487 c377.0068 296.5684 375.521 292.9063 372.5493 289.9609 C369.395 286.8594 365.6685 285.3086 361.3672 285.3086 c357.1187 285.3086 353.4561 286.8457 350.3813 289.9219 C347.3052 292.998 345.7676 296.6729 345.7676 300.9487 c345.7676 305.2236 347.3052 308.9253 350.3813 312.0532 C353.3784 315.0776 357.041 316.5894 361.3672 316.5894 c365.7471 316.5894 369.4478 315.0776 372.4717 312.0532 Cf1 D352.4165 310.0195 m349.8604 307.4375 348.582 304.4136 348.582 300.9448 c348.582 297.4766 349.8477 294.4775 352.377 291.9492 C354.9077 289.4189 357.9189 288.1543 361.4141 288.1543 c364.9087 288.1543 367.9463 289.4316 370.5288 291.9873 C372.9805 294.3613 374.2061 297.3457 374.2061 300.9448 c374.2061 304.5166 372.96 307.5483 370.4688 310.0391 C367.9785 312.5288 364.96 313.7744 361.4141 313.7744 c357.8677 313.7744 354.8672 312.5225 352.4165 310.0195 Cf0 D359.1431 302.4702 m358.7529 303.3218 358.1685 303.748 357.3882 303.748 c356.0103 303.748 355.3213 302.8198 355.3213 300.9644 c355.3213 299.1084 356.0103 298.1816 357.3882 298.1816 c358.2988 298.1816 358.9487 298.6328 359.3389 299.5381 C361.25 298.5215 L360.3389 296.9023 358.9722 296.0928 357.1504 296.0928 c355.7451 296.0928 354.6196 296.5234 353.7744 297.3848 C352.9282 298.2461 352.5049 299.4351 352.5049 300.9487 c352.5049 302.4365 352.9414 303.6172 353.813 304.4922 C354.6846 305.3667 355.7715 305.8042 357.0728 305.8042 c358.9995 305.8042 360.3774 305.0454 361.2119 303.5293 C359.1431 302.4702 Lf368.1338 302.4702 m367.7427 303.3218 367.1689 303.748 366.4141 303.748 c365.0078 303.748 364.3042 302.8198 364.3042 300.9644 c364.3042 299.1084 365.0078 298.1816 366.4141 298.1816 c367.3262 298.1816 367.9648 298.6328 368.3286 299.5381 C370.2822 298.5215 L369.373 296.9023 368.0083 296.0928 366.1895 296.0928 c364.7861 296.0928 363.6636 296.5234 362.8184 297.3848 C361.9746 298.2461 361.5518 299.4351 361.5518 300.9487 c361.5518 302.4365 361.9805 303.6172 362.8389 304.4922 C363.6953 305.3667 364.7861 305.8042 366.1123 305.8042 c368.0347 305.8042 369.4116 305.0454 370.2427 303.5293 C368.1338 302.4702 Lf*UU/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -289.615692 99.065300) XTU/AdobeObjectMatrix (0.867492 0.000000 0.000000 0.867395 -387.309723 67.870880) XTu0 0 0 0 1 1 1 Xa392.2637 316.0137 m398.1943 316.0137 403.002 311.2065 403.002 305.2764 c403.002 299.3457 398.1943 294.5391 392.2637 294.5391 c386.3325 294.5391 381.5244 299.3457 381.5244 305.2764 c381.5244 311.2065 386.3325 316.0137 392.2637 316.0137 cfu1 D0.74902 0.678431 0.670588 0.901961 0 0 0 Xa395.3716 308.3833 m395.3716 308.7974 395.0356 309.1323 394.6221 309.1323 C389.8794 309.1323 L389.4658 309.1323 389.1304 308.7974 389.1304 308.3833 C389.1304 303.6406 L390.4531 303.6406 L390.4531 298.0244 L394.0479 298.0244 L394.0479 303.6406 L395.3716 303.6406 L395.3716 308.3833 L395.3716 308.3833 Lf0 D392.251 313.001 m393.1465 313.001 393.873 312.2744 393.873 311.3789 c393.873 310.4829 393.1465 309.7568 392.251 309.7568 c391.355 309.7568 390.6284 310.4829 390.6284 311.3789 c390.6284 312.2744 391.355 313.001 392.251 313.001 cfU*u1 D392.2358 317.1074 m389.0244 317.1074 386.3052 315.9868 384.0796 313.7451 C381.7964 311.4263 380.6548 308.6816 380.6548 305.5127 c380.6548 302.3442 381.7964 299.6187 384.0796 297.3379 C386.3633 295.0586 389.0825 293.918 392.2358 293.918 c395.4287 293.918 398.1963 295.0674 400.5381 297.3672 C402.7441 299.5508 403.8467 302.2661 403.8467 305.5127 c403.8467 308.7598 402.7246 311.5034 400.48 313.7451 C398.2354 315.9868 395.4878 317.1074 392.2358 317.1074 cf0 D392.2656 315.0215 m394.8979 315.0215 397.1318 314.0928 398.9697 312.2378 C400.8286 310.4023 401.7578 308.1602 401.7578 305.5127 c401.7578 302.8462 400.8477 300.6333 399.0283 298.875 C397.1123 296.9805 394.8579 296.0342 392.2656 296.0342 c389.6719 296.0342 387.4365 296.9707 385.5596 298.8457 C383.6826 300.7202 382.7441 302.9424 382.7441 305.5127 c382.7441 308.0835 383.6924 310.3247 385.5889 312.2378 C387.4087 314.0928 389.6338 315.0215 392.2656 315.0215 cf*UU/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XTu*u0 0 0 0 1 1 1 Xa388.9014 287.752 m389.2168 287.752 389.5049 287.7246 389.7646 287.6689 C390.0249 287.6133 390.248 287.5225 390.4346 287.3955 C390.6201 287.2695 390.7637 287.1006 390.8662 286.8906 C390.9683 286.6797 391.0195 286.4219 391.0195 286.1113 c391.0195 285.7773 390.9438 285.5 390.7915 285.2783 C390.6401 285.0547 390.415 284.873 390.1182 284.7305 C390.5278 284.6133 390.8335 284.4082 391.0352 284.1133 C391.2373 283.8193 391.3379 283.4648 391.3379 283.0508 c391.3379 282.7168 391.2729 282.4277 391.1431 282.1836 C391.0127 281.9395 390.8374 281.7402 390.6172 281.5859 C390.3975 281.4307 390.1465 281.3164 389.8647 281.2422 C389.5825 281.168 389.2935 281.1309 388.9951 281.1309 C385.7793 281.1309 L385.7793 287.752 L388.9014 287.752 L388.9014 287.752 Lf1 D388.7148 285.0742 m388.9751 285.0742 389.1885 285.1367 389.3555 285.2598 C389.5234 285.3828 389.6069 285.583 389.6069 285.8604 c389.6069 286.0146 389.5786 286.1416 389.5234 286.2402 C389.4668 286.3389 389.3931 286.416 389.2998 286.4717 C389.207 286.5273 389.1001 286.5664 388.98 286.5869 C388.8584 286.6084 388.7334 286.6191 388.603 286.6191 C387.2388 286.6191 L387.2388 285.0742 L388.7148 285.0742 Lf388.8003 282.2637 m388.9429 282.2637 389.0786 282.2773 389.209 282.3057 c389.3389 282.334 389.4531 282.3809 389.5532 282.4443 C389.6523 282.5098 389.731 282.5977 389.79 282.709 C389.8481 282.8203 389.8784 282.9629 389.8784 283.1357 c389.8784 283.4746 389.7822 283.7178 389.5903 283.8633 C389.3979 284.0078 389.1436 284.0801 388.8281 284.0801 C387.2388 284.0801 L387.2388 282.2637 L388.8003 282.2637 Lf*U0 D391.5952 287.752 m393.2275 287.752 L394.7783 285.1367 L396.3203 287.752 L397.9443 287.752 L395.4849 283.6719 L395.4849 281.1309 L394.0254 281.1309 L394.0254 283.709 L391.5952 287.752 LfU/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XTu438.9404 282.7676 m439.0215 282.6133 439.127 282.4883 439.2598 282.3926 c439.3926 282.2959 439.5479 282.2246 439.7275 282.1787 C439.9063 282.1318 440.0908 282.1094 440.2832 282.1094 c440.4121 282.1094 440.5508 282.1191 440.6992 282.1416 C440.8467 282.1631 440.9854 282.2051 441.1152 282.2676 C441.2441 282.3281 441.3516 282.4141 441.4395 282.5225 C441.5254 282.6299 441.5684 282.7676 441.5684 282.9346 c441.5684 283.1143 441.5117 283.2588 441.3965 283.3701 C441.2832 283.4824 441.1328 283.5742 440.9482 283.6484 C440.7637 283.7227 440.5527 283.7871 440.3184 283.8438 C440.084 283.8994 439.8457 283.9609 439.6055 284.0293 C439.3574 284.0918 439.1172 284.167 438.8828 284.2559 C438.6484 284.3457 438.4375 284.4619 438.252 284.6045 C438.0684 284.7461 437.918 284.9238 437.8047 285.1367 C437.6895 285.3506 437.6328 285.6094 437.6328 285.9121 c437.6328 286.252 437.7051 286.5469 437.8496 286.7979 C437.9951 287.0479 438.1855 287.2568 438.4199 287.4248 C438.6543 287.5918 438.9199 287.7148 439.2168 287.7949 C439.5137 287.876 439.8105 287.916 440.1055 287.916 c440.4531 287.916 440.7852 287.877 441.1025 287.7988 C441.4199 287.7227 441.7031 287.5957 441.9502 287.4238 C442.1973 287.25 442.3936 287.0293 442.5391 286.7598 C442.6836 286.4902 442.7559 286.1641 442.7559 285.7813 C441.3438 285.7813 L441.3311 285.9785 441.29 286.1426 441.2188 286.2715 C441.1484 286.4023 441.0547 286.5039 440.9375 286.5781 C440.8203 286.6523 440.6865 286.7051 440.5361 286.7354 C440.3857 286.7666 440.2207 286.7822 440.042 286.7822 c439.9258 286.7822 439.8086 286.7695 439.6914 286.7451 C439.5742 286.7207 439.4688 286.6777 439.373 286.6152 C439.2773 286.5527 439.1992 286.4766 439.1377 286.3828 C439.0762 286.29 439.0449 286.1729 439.0449 286.0313 c439.0449 285.9004 439.0703 285.7949 439.1191 285.7158 C439.168 285.6348 439.2656 285.5605 439.4111 285.4922 c439.5566 285.4248 439.7568 285.3564 440.0127 285.2891 c440.2695 285.2207 440.6055 285.1328 441.0186 285.0293 C441.1416 285.0039 441.3135 284.959 441.5313 284.8936 C441.751 284.8281 441.9688 284.7266 442.1855 284.584 C442.4014 284.4404 442.5879 284.25 442.7461 284.0127 C442.9033 283.7754 442.9814 283.4707 442.9814 283.0986 c442.9814 282.7959 442.9219 282.5146 442.8047 282.2539 c442.6875 281.9941 442.5127 281.7695 442.2813 281.582 C442.0488 281.3926 441.7617 281.2461 441.418 281.1416 C441.0762 281.0352 440.6787 280.9834 440.2266 280.9834 c439.8613 280.9834 439.5078 281.0293 439.1641 281.1182 C438.8213 281.209 438.5186 281.3496 438.2559 281.541 C437.9932 281.7334 437.7852 281.9785 437.6289 282.2754 C437.4746 282.5723 437.4004 282.9248 437.4072 283.334 C438.8203 283.334 L438.8203 283.1113 438.8594 282.9219 438.9404 282.7676 cf*u447.1465 287.752 m449.623 281.1309 L448.1113 281.1309 L447.6094 282.6055 L445.1328 282.6055 L444.6133 281.1309 L443.1475 281.1309 L445.6523 287.752 L447.1465 287.752 Lf1 D447.2295 283.6924 m446.3945 286.1201 L446.375 286.1201 L445.5137 283.6924 L447.2295 283.6924 Lf*UU/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XTu0 D413.0176 287.752 m415.7852 283.3105 L415.8008 283.3105 L415.8008 287.752 L417.166 287.752 L417.166 281.1309 L415.71 281.1309 L412.9531 285.5645 L412.9355 285.5645 L412.9355 281.1309 L411.5684 281.1309 L411.5684 287.752 L413.0176 287.752 Lf422.6953 285.9883 m422.6094 286.1279 422.5 286.25 422.3711 286.3555 C422.2402 286.46 422.0938 286.543 421.9297 286.6006 C421.7656 286.6602 421.5938 286.6895 421.416 286.6895 c421.0879 286.6895 420.8086 286.626 420.5801 286.499 C420.3506 286.373 420.166 286.2031 420.0234 285.9893 C419.8809 285.7754 419.7773 285.5332 419.7129 285.2617 C419.6475 284.9902 419.6152 284.709 419.6152 284.418 c419.6152 284.1396 419.6475 283.8691 419.7129 283.6074 C419.7773 283.3438 419.8809 283.1074 420.0234 282.8975 C420.166 282.6875 420.3506 282.5195 420.5801 282.3926 c420.8086 282.2656 421.0879 282.2021 421.416 282.2021 c421.8594 282.2021 422.209 282.3379 422.459 282.6104 C422.709 282.8828 422.8623 283.2412 422.918 283.6865 C424.3281 283.6865 L424.291 283.2725 424.1953 282.8975 424.041 282.5645 C423.8867 282.2285 423.6816 281.9453 423.4277 281.709 C423.1748 281.4727 422.8779 281.2939 422.5371 281.1699 C422.1973 281.0449 421.8232 280.9834 421.416 280.9834 c420.9082 280.9834 420.4512 281.0713 420.0459 281.248 C419.6416 281.4238 419.2988 281.668 419.0205 281.9756 C418.7422 282.2852 418.5273 282.6494 418.3789 283.0664 C418.2305 283.4844 418.1563 283.9336 418.1563 284.418 c418.1563 284.9121 418.2305 285.3711 418.3789 285.7949 c418.5273 286.2188 418.7422 286.5889 419.0205 286.9043 C419.2988 287.2197 419.6416 287.4668 420.0459 287.6465 C420.4512 287.8262 420.9082 287.916 421.416 287.916 c421.7803 287.916 422.125 287.8633 422.4492 287.7578 C422.7744 287.6523 423.0654 287.499 423.3213 287.2969 C423.5781 287.0967 423.79 286.8477 423.957 286.5508 c424.124 286.2539 424.2285 285.9121 424.2725 285.5293 C422.8623 285.5293 L422.8379 285.6963 422.7813 285.8496 422.6953 285.9883 CfU/AdobeObjectMatrix (0.993781 0.000000 0.000000 0.993670 -437.123352 -74.436913) XTu455.0801 305.5195 m455.084 299.6743 450.3486 294.9316 444.502 294.9277 C438.6563 294.9238 433.9141 299.6582 433.9102 305.5049 C433.9102 305.5088 433.9102 305.5146 433.9102 305.5195 C433.9063 311.3643 438.6416 316.1064 444.4863 316.1108 C450.333 316.1152 455.0742 311.3799 455.0801 305.5352 C455.0801 305.5293 455.0801 305.5249 455.0801 305.5195 Cfu*u1 D0.74902 0.678431 0.670588 0.901961 0 0 0 Xa444.4189 317.1143 m441.207 317.1143 438.4873 315.9932 436.2627 313.7524 C433.9795 311.4331 432.8369 308.6885 432.8369 305.5195 c432.8369 302.3501 433.9795 299.6255 436.2627 297.3447 C438.5449 295.0645 441.2646 293.9238 444.4189 293.9238 c447.6113 293.9238 450.3789 295.0742 452.7207 297.373 C454.9258 299.5576 456.0293 302.2729 456.0293 305.5195 c456.0293 308.7656 454.9082 311.5103 452.6621 313.7524 C450.418 315.9932 447.6699 317.1143 444.4189 317.1143 cf0 D444.4473 315.0273 m447.0801 315.0273 449.3145 314.0996 451.1533 312.2441 C453.0107 310.4087 453.9395 308.168 453.9395 305.5195 c453.9395 302.8525 453.0303 300.6401 451.2109 298.8809 C449.2949 296.9873 447.04 296.041 444.4473 296.041 c441.8555 296.041 439.6191 296.9785 437.7422 298.8525 C435.8662 300.7271 434.9277 302.9487 434.9277 305.5195 c434.9277 308.0898 435.875 310.3315 437.7715 312.2441 C439.5908 314.0996 441.8164 315.0273 444.4473 315.0273 cf*U439.2793 307.1553 m439.7412 310.0732 441.7949 311.6328 444.3691 311.6328 c448.0703 311.6328 450.3271 308.9468 450.3271 305.3652 c450.3271 301.8696 447.9258 299.1553 444.3105 299.1553 c441.8242 299.1553 439.5967 300.6855 439.1914 303.6895 C442.1133 303.6895 L442.2002 302.1304 443.2129 301.5811 444.6582 301.5811 c446.3066 301.5811 447.377 303.1118 447.377 305.4512 c447.377 307.9072 446.4521 309.2061 444.7158 309.2061 c443.4434 309.2061 442.3447 308.7441 442.1133 307.1553 C442.9629 307.1611 L440.6631 304.8613 L438.3633 307.1611 L439.2793 307.1553 LfU/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 -23.952101 -89.729622) XTU/AdobeObjectMatrix (0.621108 0.000000 0.000000 0.621038 -285.771820 240.489563) XTu0 0 0 0 1 1 1 Xa428.3018 305.5093 m428.3066 300.0088 423.8496 295.5469 418.3486 295.543 C412.8477 295.5391 408.3857 299.9951 408.3818 305.4946 C408.3818 305.5005 408.3818 305.5049 408.3818 305.5093 C408.3779 311.0103 412.834 315.4717 418.335 315.4761 C423.8359 315.4795 428.2979 311.0239 428.3018 305.5244 C428.3018 305.5195 428.3018 305.5142 428.3018 305.5093 Cf*u1 D0.74902 0.678431 0.670588 0.901961 0 0 0 Xa426.5703 313.7446 m424.3262 315.9873 421.5781 317.1074 418.3271 317.1074 c415.1143 317.1074 412.3965 315.9873 410.1699 313.7446 C407.8867 311.4253 406.7461 308.6812 406.7461 305.5112 c406.7461 302.3413 407.8867 299.6157 410.1699 297.3359 C412.4541 295.0547 415.1719 293.9141 418.3271 293.9141 c421.5195 293.9141 424.2871 295.0645 426.6289 297.3643 C428.835 299.5488 429.9385 302.2642 429.9385 305.5112 c429.9385 308.7583 428.8164 311.5034 426.5703 313.7446 Cf0 D425.1191 298.8721 m423.2031 296.9785 420.9492 296.0313 418.3564 296.0313 c415.7627 296.0313 413.5273 296.9688 411.6504 298.8438 C409.7734 300.7188 408.835 302.9409 408.835 305.5112 c408.835 306.5981 409.0068 307.626 409.3457 308.5947 C412.4189 307.2349 L412.1973 307.2349 L412.1973 305.8569 L413.2852 305.8569 L413.2852 305.6621 413.2656 305.4683 413.2656 305.2744 C413.2656 304.9438 L412.1973 304.9438 L412.1973 303.5654 L413.459 303.5654 L413.6348 302.5366 414.0225 301.7021 414.5469 301.0415 C415.6338 299.605 417.3809 298.8281 419.2832 298.8281 c420.5264 298.8281 421.6523 299.1973 422.3125 299.5664 C421.8457 301.7212 L421.4375 301.5073 420.5264 301.2163 419.6328 301.2163 c418.6621 301.2163 417.75 301.5073 417.1289 302.2065 C416.8379 302.5366 416.624 302.9834 416.4883 303.5654 C420.709 303.5654 L426.7061 300.9111 L426.291 300.1748 425.7637 299.4946 425.1191 298.8721 Cf417.5771 304.9438 m417.5508 304.9634 L417.5957 304.9438 L417.5771 304.9438 Lf421.1875 305.8569 m421.3613 305.8569 L421.3613 307.2349 L418.0742 307.2349 L416.7383 307.8257 L416.8535 308.084 416.9893 308.3154 417.1484 308.4961 C417.75 309.2354 418.6035 309.5449 419.5361 309.5449 c420.3906 309.5449 421.1855 309.293 421.6904 309.0791 C422.2344 311.2925 L421.5352 311.6025 420.5059 311.8745 419.3223 311.8745 c417.498 311.8745 415.9443 311.1367 414.8379 309.8945 C414.5918 309.6108 414.3789 309.2925 414.1855 308.9556 C410.3721 310.6431 L410.7422 311.1973 411.1758 311.7295 411.6797 312.2373 C413.5 314.0928 415.7246 315.021 418.3564 315.021 c420.9883 315.021 423.2227 314.0928 425.0625 312.2373 C426.9189 310.4014 427.8477 308.1597 427.8477 305.5112 c427.8477 304.6382 427.748 303.8149 427.5527 303.0396 C421.1875 305.8569 Lf*UU/AdobeObjectMatrix (1.000000 0.000000 0.000000 1.000000 0.000497 0.009624) XTUULB%AI5_EndLayer--%AI3_BeginCropsuserdict /AI3_noCropMarks known not {0 Auu0 R0 G0 J 0 j 0.5 w 4 M []0 d0 XR331.5 278.5 m304.5 278.5 LS340.5 269.5 m340.5 242.5 LSUu331.5 320.5 m304.5 320.5 LS340.5 329.5 m340.5 356.5 LSUu469.5 320.5 m496.5 320.5 LS460.5 329.5 m460.5 356.5 LSUu469.5 278.5 m496.5 278.5 LS460.5 269.5 m460.5 242.5 LSUU} if%AI3_EndCrops%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF